services:
  # PostgreSQL database for Strapi
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=strapi
      - POSTGRES_USER=strapi
      - POSTGRES_PASSWORD=strapi_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - traefik-net
    restart: unless-stopped

  # Strapi CMS
  strapi:
    image: strapi/strapi:latest
    environment:
      - DATABASE_CLIENT=postgres
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=strapi
      - DATABASE_USERNAME=strapi
      - DATABASE_PASSWORD=strapi_password
      - JWT_SECRET=your_jwt_secret_key_here
      - ADMIN_JWT_SECRET=your_admin_jwt_secret_here
      - APP_KEYS=your_app_key_1,your_app_key_2,your_app_key_3,your_app_key_4
      - API_TOKEN_SALT=your_api_token_salt_here
      - TRANSFER_TOKEN_SALT=your_transfer_token_salt_here
    volumes:
      - strapi_data:/srv/app
    ports:
      - "1337:1337"
    depends_on:
      - postgres
    networks:
      - traefik-net
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.strapi.rule=Host(`cms.cyberworldbuilders.dev`)
      - traefik.http.routers.strapi.entrypoints=websecure
      - traefik.http.routers.strapi.tls=true
      - traefik.http.routers.strapi.tls.certresolver=letsencrypt
      - traefik.http.services.strapi.loadbalancer.server.port=1337

  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports: []  # Remove public port exposure to prevent direct access
    environment:
      - NODE_ENV=development
      - PORT=3001
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL:-https://placeholder.supabase.co}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY:-your_supabase_anon_key}
      - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY:-pk_test_your_publishable_key}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY:-sk_test_your_secret_key}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-api-key}
      - NEXT_PUBLIC_MAKE_COM_WEBHOOK_URL=${NEXT_PUBLIC_MAKE_COM_WEBHOOK_URL:-https://hooks.make.com/webhooks/your-webhook-id}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://0.0.0.0:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
      - ./logs:/app/logs
    networks:
      - traefik-net
    labels:
      - traefik.enable=true
      - traefik.http.routers.cyberworldbuilders.rule=Host(`cyberworldbuilders.dev`)
      - traefik.http.routers.cyberworldbuilders.entrypoints=websecure
      - traefik.http.routers.cyberworldbuilders.tls=true
      - traefik.http.routers.cyberworldbuilders.tls.certresolver=letsencrypt
      - traefik.http.services.cyberworldbuilders.loadbalancer.server.port=3001

volumes:
  postgres_data:
  strapi_data:

networks:
  traefik-net:
    external: true 