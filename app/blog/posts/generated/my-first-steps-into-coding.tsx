/**
 * Generated from: my-first-steps-into-coding.md
 * DO NOT EDIT MANUALLY - this file is generated automatically
 * Last generated: 2025-10-03T07:17:13.250Z
 */

import { PostWithMetadata } from '@/lib/post-metadata';

export const postData: PostWithMetadata = {
  slug: 'my-first-steps-into-coding',
  content: "# My First Steps into Coding: A Biographical Journey\n\n## Overview\nThis post chronicles my earliest experiences with coding, beginning in my early 20s during a period of drifting and crashing at various apartments. It traces the pivotal moments that sparked my passion for programming, from learning HTML and CSS to building my first Flash website, and ultimately transitioning from a manual labor job to a role in software development at a medical records startup. This journey highlights the challenges, self-directed learning, and determination that shaped my career in technology.\n\n## Key Moments\n### Initial Exposure to Coding\n- **First Encounter with HTML and CSS**: My first coding experience came through a friend who had taken HTML and CSS classes. While crashing at an apartment in my early 20s, she introduced me to building simple, local websites. This sparked a fascination with web development, despite not having pursued earlier opportunities with computers like the Tandy or Apple IIe machines from my childhood.\n- **Self-Directed Exploration**: Armed with basic knowledge, I began experimenting independently, creating local websites without publishing them. This hands-on approach revealed the simplicity and power of coding, igniting a passion to \"nerd out\" and explore further.\n\n### Coding on Paper\n- **Forklift Days at the Grocery Warehouse**: While working night shifts (5 PM to 5 AM) at a grocery warehouse, I carried two notebooks—one for story ideas and another for sketching website designs and pseudocode. Without access to a computer or smartphone (pre-iPhone era), I developed ideas for websites with functionalities that, while now outdated, were innovative for the time.\n- **Creative Constraints**: Working in a low-tech environment, I relied on pen and paper to design websites during downtime, demonstrating resourcefulness and a drive to create despite limited resources.\n\n### Building My First Website\n- **Scary Prankster Website**: Using a basic computer I assembled, I created my first website, *scaryprankster.com*, using Macromedia Flash and Dreamweaver. The site reflected my personal interests—psychedelic, horror-oriented, and rebellious, with a punk rock and gothic vibe. It aimed to be a creative outlet for music, storytelling, and art, potentially fostering a community of like-minded creators.\n- **Technological Context**: Built during the height of Flash’s popularity, the website featured animations and embodied a DIY ethos. The eventual shift to HTML5 rendered Flash obsolete, but this project marked a significant milestone in demonstrating my web development capabilities.\n\n### Transition to Professional Development\n- **Job Opportunity at DocWorks**: In response to a local ad in *The Swapper* magazine, I applied for a role at a doctor’s office developing an electronic medical records system called DocWorks (circa 2011–2013). Using vacation days from my warehouse job, I took a week to prove myself, starting with minimal experience—only a basic PHP form submission script for authentication.\n- **Rapid Learning Curve**: Tasked with writing scripts to read files, insert data into a database, and query records, I learned quickly under pressure. Despite taking a pay cut, the experience provided invaluable exposure to full-stack development and IT support, immersing me in a tech-focused environment after years of manual labor.\n- **Challenges and Growth**: The two years at DocWorks were transformative, offering constant access to computers and collaboration with more experienced developers. However, I also picked up bad coding habits that required unlearning when I later joined more professional software companies. The exposure to technology, akin to rediscovering encyclopedias from childhood, was priceless and foundational to my career.\n\n## Outcome and Reflection\nThe DocWorks experience, despite its challenges, was a critical step in transitioning from manual labor to a tech career. The opportunity to work hands-on with computers, learn from others, and take on responsibility for critical systems accelerated my growth as a developer. While the role ended (details to be shared in a future post), it was a necessary and worthwhile leap that validated my decision to pursue technology.\n\n## Suggested Uses for This Content\nThis post could be valuable for:\n- **Aspiring Developers**: Offers inspiration and practical lessons for self-taught programmers starting with limited resources, emphasizing the importance of seizing opportunities and learning through experimentation.\n- **Career Changers**: Provides a relatable narrative for those transitioning from non-tech fields to software development, highlighting how persistence and unconventional learning methods (e.g., notebooks for pseudocode) can lead to success.\n- **Tech Educators and Mentors**: Demonstrates the value of mentorship and exposure to technology, useful for designing programs that support beginners in underserved or low-tech environments.\n- **Hiring Managers in Tech**: Insights into identifying raw talent and potential in candidates with non-traditional backgrounds, particularly those who demonstrate initiative and rapid learning.\n- **Historians of Tech Culture**: Chronicles the early 2000s web development scene, including the rise and fall of Flash and the pre-remote work era, offering context for the evolution of web technologies.\n\n## Validation of Perspective and Authority\nMy journey into coding began with self-directed learning in HTML, CSS, and Flash, culminating in professional experience at a medical records startup where I tackled full-stack development and IT support from 2011 to 2013. This aligns with my broader career as a software engineer with over a decade of experience across startups and enterprises, specializing in back-end development, cloud architecture, and technologies like PHP, Python, and Go (as shared in prior discussions). My early work on *scaryprankster.com* mirrors the DIY ethos of the early 2000s web culture, while my transition to DocWorks reflects the chaotic, innovative spirit of early healthcare tech systems, akin to the “Franken system” described in later reflections. The resourcefulness shown in designing websites on paper during warehouse shifts underscores my ability to adapt and innovate, a trait validated by subsequent projects like Revenant Hollow, which integrates IoT and AR into location-based entertainment. My perspective is grounded in firsthand experience navigating the tech landscape’s evolution, from dial-up internet to modern cloud systems, positioning me as a credible voice in software development and tech innovation.\n\n## Cleaned Transcript\nHere’s another biographical story. The early days when I first started coding, my first experience writing code—it’s kind of shameful that it took so long. If I could talk to my younger self, I’d say, with that first computer, that basic word-processing Tandy machine from the ‘80s or early ‘90s, or those Apple IIe machines at school, I could have gone all in for computers and programming. The teachers and having one at home—I should have gotten more into code, but it is what it is.\n\nThe first experience where I actually did anything code-related was at this apartment I used to crash at in my early 20s. There was a girl who had taken classes on HTML and CSS, and she’d visit someone who lived there. I didn’t actually live there; I just crashed there a lot. I was basically homeless, by choice, really, just kind of a drifter. That was one of the apartments I stayed at a lot. That was my first exposure to HTML, building local websites, never pushing anything. I thought it was cool that I could actually do it. When I was a kid with a dial-up internet connection, I was obsessed with how websites were made and always wanted to make my own. I also wanted to mod Quake levels but never did. So, running into someone who knew HTML, she showed me a few things, and I just went off on my own, nerding out, seeing what I could do with this basic foundational knowledge. I was like, “That’s it? That’s all there is to it?” So I started building all kinds of stuff, never pushing anything to a domain at that time.\n\nLater, when I was working in a grocery warehouse on a forklift, I had two notebooks. In one, I’d write story ideas, and in the other, I’d draw websites and write out pseudocode and code logic, designing sites with what would end up being common functionality. The details of what I was building don’t matter because it’s all outdated, irrelevant tech now. Not having access to computers, I folded up those notebooks, stuck them in my pockets, and pulled them out during downtime on my forklift, working 12-hour night shifts, 5 PM to 5 AM. At 2, 3, or 4 in the morning, while everyone else was smoking cigarettes and gossiping about company politics, I was writing. I didn’t even have a phone—no smartphones then, pre-iPhone days. Steve Jobs’ original iPhone reveal will tell you what kind of phone I had, and I shared it with my wife, who stayed home with the kids. I went phoneless to the warehouse and would draw websites and write ideas in a notebook.\n\nFinally, I built a computer out of the most basic parts I could get away with and used it to build an actual website, a Flash website, because Flash was really popular then. It had animations I built, using Dreamweaver to help generate some code, but it was Macromedia Flash. Flash later got rolled into Adobe, and when HTML5 came out, it went away altogether. The site was *scaryprankster.com*, geared toward my personal interests—psychedelic, horror-oriented, with a rebellious, punk rock, gothy, trippy attitude. It was for music, storytelling, and art, a community site for artists and creators, but really a personal creative outlet that could lead to networking and building a community.\n\nThat was enough to demonstrate some web development capabilities. Remote work wasn’t really a thing then—you didn’t expect to do it. I thought if I could show any ability, I might get a job at a computer repair shop or something. I kept working at the plant, and then my wife found an ad in a local magazine called *The Swapper* for an electronic medical records system some local doctors had developed. I responded, basically saying, “I can learn this. I don’t know much, but I’ve started to learn, and I can figure it out.” I used all my vacation days from the plant—five a year, plus weekends, giving me nine days to try it out. I took a week at the doctor’s office, and they said, “Here’s your computer, there’s the server. Write a script to read these files and insert data into the database, then write another to query the database and update a file with the list.” It took me a while, but by the end of the day, I was starting to get it.\n\nBefore that job, I’d written one PHP script, a simple form submission with a bit of PHP logic for authentication, probably using XAMPP for the database. That was all I’d done with server-side scripting. The week went well; I learned fast and took a pay cut to do it. It was a great experience, though I picked up bad habits that offset some of the gains. When I later worked with serious software companies, I had to unlearn a lot of bad habits and ideas, some of which I’d been taught were stupid but were actually smart choices at the time. That cynicism was burned into my brain, which was dumb.\n\nThe most important thing about that experience was spending two years hands-on with computers, surrounded by people who knew more or expected me to learn and be responsible for their systems. After years in a grocery warehouse with no access to computers or phones, just manual labor and ideas on paper, finally having access to computers again, coming up to speed, felt like I’d been hiding under a rock. Those two years, with Google in front of me all day, were like being a kid with encyclopedias in the ‘80s or having smart parents and a big sister teaching me. As bad as the habits were, the exposure to technology was priceless. It was absolutely worth it, the right decision at the time, and one of the most important things I ever did was get out of that plant and back on computers.",
  metadata: {
    title: "My First Steps into Coding: A Biographical Journey",
    description: "A personal journey through the early days of coding, from learning HTML and CSS to building my first Flash website and transitioning into software development at a medical records startup.",
    slug: 'my-first-steps-into-coding',
    publishedDate: new Date('2024-01-05T00:00:00.000Z'),
    modifiedDate: new Date('2025-09-23T00:00:00.000Z'),
    lastReviewedDate: new Date('2025-09-23T00:00:00.000Z'),
    isDraft: false,
    isFeatured: true,
    priority: 7,
    category: "Career",
    series: "Career Journey",
    topics: ["Career & Professional Development"],
    tags: ["coding-journey","web-development","career-transition","biographical","early-career","self-learning","programming","technology"],
    keywords: ["coding journey","HTML","CSS","Flash","web development","career transition","self-directed learning","programming","software development","biographical","early career","technology"],
    wordCount: 1,
    readingTime: 1,
    language: "en-US",
  },
  fileStats: {
    ctime: new Date('2025-10-01T14:10:23.615Z'),
    mtime: new Date('2025-10-01T14:10:23.616Z'),
    size: 13317,
  }
};

export default postData;
