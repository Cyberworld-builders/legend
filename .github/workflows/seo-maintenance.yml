name: SEO Maintenance Script Automation

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to checkout and process'
        required: true
        default: '117-seo-maintenance-script-automation'
        type: string
  # Future: trigger on PR open with main
  # pull_request:
  #   branches: [ main ]
  #   types: [ opened ]

permissions:
  contents: write  # Required for committing and pushing changes
  pull-requests: read  # Required for PR context

jobs:
  seo-maintenance:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout specified branch
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # Fetch full history for proper git operations
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Validate current metadata
        run: |
          echo "🔍 Validating current post metadata..."
          node scripts/metadata-utils.js validate
      
      - name: Update review dates for posts needing review
        run: |
          echo "📅 Updating review dates for posts older than 90 days..."
          node scripts/metadata-utils.js update-review-dates
      
      - name: Run SEO maintenance script
        run: |
          echo "🔧 Running SEO maintenance (generate post index)..."
          npm run seo
      
      - name: Validate updated metadata
        run: |
          echo "✅ Validating updated metadata..."
          node scripts/metadata-utils.js validate
      
      - name: Check for changes
        id: changes
        run: |
          git add .
          if git diff --staged --quiet; then
            echo "No changes detected"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected"
            echo "has_changes=true" >> $GITHUB_OUTPUT
            git status --porcelain
          fi
      
      - name: Configure Git
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      
      - name: Commit changes
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          git commit -m "chore: automated SEO maintenance updates
          
          - Updated post metadata and review dates
          - Regenerated post index with latest metadata
          - Validated frontmatter across all posts
          
          Auto-generated by SEO maintenance workflow"
      
      - name: Push changes
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          git push origin ${{ inputs.branch }}
      
      - name: Summary
        run: |
          if [ "${{ steps.changes.outputs.has_changes }}" == "true" ]; then
            echo "✅ SEO maintenance completed successfully with changes committed and pushed"
          else
            echo "✅ SEO maintenance completed - no changes were needed"
          fi